#ifdef VERTEX_SHADER
		layout (location = 0) in vec3 aPos;
		layout (location = 1) in vec3 aNormal;
		layout (location = 2) in vec2 aTexCoords;

		out vec2 TexCoords;

		void main()
		{
			TexCoords = aTexCoords;
			gl_Position = vec4(aPos, 1.0);
		}
#endif

#ifdef FRAGMENT_SHADER

		out vec4 FragColor;

		in vec2 TexCoords;
		

		uniform sampler2D gPosition;
		uniform sampler2D gNormal;
		uniform sampler2D gAlbedoSpec;
		uniform sampler2D gDepth;
		uniform sampler2D gSSAO;
		uniform sampler2D gSSAOBlur;
		uniform sampler2D gRoughness;
		uniform sampler2D gMetal;

		uniform int renderMode;
		
		void main()
		{   
			if(renderMode == 1)
				FragColor.xyz = texture(gNormal, TexCoords).xyz;
			else if(renderMode == 2)
				FragColor.xyz = texture(gDepth, TexCoords).xyz;
			else if(renderMode == 3)
				FragColor.xyz = texture(gPosition, TexCoords).xyz;
			else if(renderMode == 4)
				FragColor.xyz = texture(gAlbedoSpec, TexCoords).xyz;
			else if(renderMode == 5)
			{
				FragColor.xyz = vec3(texture(gSSAO, TexCoords).xyz);
			}
			else if(renderMode == 6)
			{
				FragColor.xyz = vec3(texture(gSSAOBlur, TexCoords).r);
			}
			else if(renderMode == 7)
			{
				FragColor.xyz = texture(gRoughness, TexCoords).xyz;
			}
			else if (renderMode == 8)
			{
				FragColor.xyz = texture(gMetal, TexCoords).xyz;
			}
			else
			{
				float AmbientOcclusion = texture(gSSAOBlur, TexCoords).r;
				FragColor.xyz = texture(gAlbedoSpec, TexCoords).xyz * AmbientOcclusion;
			}
			FragColor.w = 1;
		}

#endif